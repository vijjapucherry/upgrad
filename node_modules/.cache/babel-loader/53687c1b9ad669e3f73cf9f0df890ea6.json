{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cherry\\\\Desktop\\\\ReactApp\\\\upgrad1\\\\src\\\\Chart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport $ from \"jquery\";\nimport CardRow from \"./CardRow\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.fetchapi(this.props.country);\n  }\n\n  fetchapi(country) {\n    var api = \"http://ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&country=\" + country + \"&api_key=1860cfefc2bccd102f8437ff38667f0f&format=json\";\n    $.ajax({\n      url: api,\n      success: searchResults => {\n        console.log(\"success\");\n        const results = searchResults.tracks.track;\n        console.log(results);\n        var trackRows = [];\n        results.forEach(track => {\n          const trackRow = React.createElement(CardRow, {\n            track: track,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          });\n          trackRows.push(trackRow);\n        });\n        this.setState({\n          row: trackRows\n        });\n      },\n      error: (xhr, status, err) => console.error(\"failed to fetch\")\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.row);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\Cherry\\Desktop\\ReactApp\\upgrad1\\src\\Chart.js"],"names":["React","useState","useEffect","$","CardRow","Chart","Component","constructor","props","state","fetchapi","country","api","ajax","url","success","searchResults","console","log","results","tracks","track","trackRows","forEach","trackRow","push","setState","row","error","xhr","status","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,CAAc,KAAKF,KAAL,CAAWG,OAAzB;AACD;;AACDD,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,QAAIC,GAAG,GACL,uEACAD,OADA,GAEA,uDAHF;AAMAR,IAAAA,CAAC,CAACU,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAEF,GADA;AAELG,MAAAA,OAAO,EAAEC,aAAa,IAAI;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,cAAMC,OAAO,GAAGH,aAAa,CAACI,MAAd,CAAqBC,KAArC;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,YAAIG,SAAS,GAAG,EAAhB;AACAH,QAAAA,OAAO,CAACI,OAAR,CAAgBF,KAAK,IAAI;AACvB,gBAAMG,QAAQ,GAAG,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAEH,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AACAC,UAAAA,SAAS,CAACG,IAAV,CAAeD,QAAf;AACD,SAHD;AAIA,aAAKE,QAAL,CAAc;AAAEC,UAAAA,GAAG,EAAEL;AAAP,SAAd;AACD,OAZI;AAaLM,MAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsBd,OAAO,CAACW,KAAR,CAAc,iBAAd;AAbxB,KAAP;AAeD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKvB,KAAL,CAAWkB,GAAnC,CAAP;AACD;;AAhCiC;;AAkCpC,eAAetB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport $ from \"jquery\";\r\nimport CardRow from \"./CardRow\";\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.fetchapi(this.props.country);\r\n  }\r\n  fetchapi(country) {\r\n    var api =\r\n      \"http://ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&country=\" +\r\n      country +\r\n      \"&api_key=1860cfefc2bccd102f8437ff38667f0f&format=json\";\r\n\r\n\r\n    $.ajax({\r\n      url: api,\r\n      success: searchResults => {\r\n        console.log(\"success\");\r\n        const results = searchResults.tracks.track;\r\n        console.log(results);\r\n        var trackRows = [];\r\n        results.forEach(track => {\r\n          const trackRow = <CardRow track={track} />;\r\n          trackRows.push(trackRow);\r\n        });\r\n        this.setState({ row: trackRows });\r\n      },\r\n      error: (xhr, status, err) => console.error(\"failed to fetch\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"chart\">{this.state.row}</div>;\r\n  }\r\n}\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}